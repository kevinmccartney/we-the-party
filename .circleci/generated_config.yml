version: 2.1
jobs:
  terraform_plan:
    working_directory: /tmp/project
    parameters:
      project:
        type: string
        description: Determines which project to plan
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform plan
          command: "if [ $CIRCLE_BRANCH = \"master\" ]; then\n  tf_env=\"prod\";\n\
            elif [ $CIRCLE_BRANCH = 'develop' ]; then\n  tf_env=\"dev\";\nelif [[\
            \ $CIRCLE_BRANCH == feature/* ]]; then\n  tf_env=\"feature\";\nfi\n\n\
            if [ '<< parameters.project >>' = 'wtp_infra' ]; then\n  tf_env=\"\";\n\
            fi\n\necho $tf_env\n\ncd projects/<< parameters.project >>/terraform/${tf_env}\n\
            \nif [ $tf_env = 'feature' ]; then\n  clean_env_name=${CIRCLE_BRANCH//\\\
            //-}\n\n  cat > variables.tfvars \\<<EOF\nwtp_environment = \"${clean_env_name}\"\
            \nwtp_aws_region = \"us-east-1\"\nEOF\nfi\n\nterraform init -input=false\n\
            terraform plan -out tfapply\n"
  terraform_apply:
    parameters:
      project:
        type: string
        description: Determines which project to plan
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform apply
          command: "if [ $CIRCLE_BRANCH = \"master\" ]; then\n  tf_env=\"prod\";\n\
            elif [ $CIRCLE_BRANCH = 'develop' ]; then\n  tf_env=\"dev\";\nelif [[\
            \ $CIRCLE_BRANCH == feature/* ]]; then\n  tf_env=\"feature\";\nfi\n\n\
            if [ '<< parameters.project >>' = 'wtp_infra' ]; then\n  tf_env=\"\";\n\
            fi\n\ncd projects/<< parameters.project >>/terraform/${tf_env}\n\nif [\
            \ $tf_env = 'feature' ]; then\n  clean_env_name=${CIRCLE_BRANCH//\\//-}\n\
            \n  cat > variables.tfvars \\<<EOF\nwtp_environment = \"${clean_env_name}\"\
            \nwtp_aws_region = \"us-east-1\"\nEOF\nfi\n\nterraform init -input=false\n\
            terraform apply -auto-approve\n"
  deploy_infra_lambdas:
    working_directory: /tmp/project
    parameters:
      project:
        type: string
        description: Determines which project to plan
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Package Lambdas
          command: "cd projects/wtp-infra\nmkdir dist\nls -la src\nzip -r dist/ping.zip\
            \ src/ping\nzip -r dist/webhook-handler.zip src/webhook-handler\nopenssl\
            \ dgst -sha256 -binary dist/ping.zip | openssl enc -base64 > dist/ping.zip.sha256\n\
            openssl dgst -sha256 -binary dist/webhook_handler.zip | openssl enc -base64\
            \ > dist/webhook_handler.zip.sha256\nls -la \nls -la dist\n"
      - aws-s3/sync:
          from: projects/wtp-infra/dist
          to: s3://wtp-infra-lambdas
workflows:
  version: 2
  wtp_infra:
    jobs:
      - terraform_plan:
          project: wtp_infra
      - approve_terraform_plan:
          type: approval
          requires:
            - terraform_plan
      - terraform_apply:
          project: wtp_infra
          requires:
            - approve_terraform_plan
      - deploy_infra_lambdas:
          requires:
            - terraform_apply
orbs:
  aws-s3: circleci/aws-s3@3.0
