version: 2.1

jobs:
  plan-apply:
    working_directory: /tmp/project
    parameters:
      wtp-environment:
        type: string
        default: ''
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      # - run:
      #     name: print environment
      #     command: |
      #       echo << parameters.wtp-environment >>

      - run:
          name: 'terraform apply'
          command: |
            if [ $CIRCLE_BRANCH = "master" ]; then
              tf_env="prod";
            elif [ $CIRCLE_BRANCH = 'develop' ]; then
              tf_env="dev";
            elif [[ $CIRCLE_BRANCH == feature/* ]]; then
              tf_env="feature";
            fi

            cd terraform/${tf_env}
            ls -la

            if [ $tf_env = 'feature' ]; then
              clean_env_name=${branch//\//-}

              cat > variables.tfvars <<EOF
            wtp_environment = '${clean_env_name}'
            wtp_aws_region = 'us-east-1'
            EOF
            fi
            
            terraform init -input=false
            terraform plan -out tfapply -var-file variables.tfvars

            cat tfapply
      # - run:
      #     name: terraform init & plan
      #     command: |
      
      # - persist_to_workspace:
      #     root: .
      #     paths:
      #       - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: 'Hello world'
          command: |
            echo "Hello world"
      # - run:
      #     name: terraform
      #     command: |
      #       terraform apply -auto-approve tfapply
      # - persist_to_workspace:
      #     root: .
      #     paths:
      #       - .
      

workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply:
          wtp-environment: echo $CIRCLE_BRANCH
          filters:
            branches:
              only:
                - master
                - develop
                - /feature\/.*/
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          requires:
            - hold-apply