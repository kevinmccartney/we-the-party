version: 2.1

# this allows you to use CircleCI's dynamic configuration feature
setup: true

# the continuation orb is required in order to use dynamic configuration
orbs:
  continuation: circleci/continuation@0.1.2

# our defined job, and its steps
jobs:
  generate_config:
    docker:
      - image: cimg/python:3.10.1 
    steps:
      - checkout # checkout code
      - run:
          name: Install Python deps
          command: pip install -r requirements.txt
      - run:
          name: Generate config
          command: |
            cd pipeline
            python generate_config.py
      - run:
          name: Cat generated conf
          command: cat .circleci/generated_config.yml
      - persist_to_workspace:
          root: ./
          paths:
            - .circleci
  apply_config:
    executor: continuation/default
    steps:
      - checkout # checkout code
      - attach_workspace:
          at: ./  
      - run:
          name: terraform
          command: |
            if [ $CIRCLE_BRANCH = "master" ]; then
            tf_env="prod";
            elif [ $CIRCLE_BRANCH = 'develop' ]; then
              tf_env="dev";
            elif [[ $CIRCLE_BRANCH == feature/* ]]; then
              tf_env="feature";
            fi

            if [ '<< parameters.project >>' = 'wtp-infra' ]; then
              tf_env="";
            fi

            cd projects/<< parameters.project >>/terraform/${tf_env}

            if [ $tf_env = 'feature' ]; then
              clean_env_name=${CIRCLE_BRANCH//\//-}

              cat > variables.tfvars \<<EOF
            wtp_environment = "${clean_env_name}"
            wtp_aws_region = "us-east-1"
            EOF
            fi

            pwd
            ls -la ../../

            terraform init -input=false
            terraform apply -auto-approve
      

# our single workflow, that triggers the setup job defined above
workflows:
  apply_and_generate_config:
    jobs:
      - generate_config
      - apply_config:
          requires:
              - generate_config
